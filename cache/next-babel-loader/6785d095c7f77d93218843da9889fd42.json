{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n/**\n * @param {string} logDate\n * @param {string} logName\n * @param {string} review\n * @param {number} stars\n */\n\nconst ReviewCard = ({\n  logDate,\n  logName,\n  stars,\n  review\n}) => {\n  const {\n    0: allText,\n    1: setAllText\n  } = useState(true);\n  const {\n    0: btnText,\n    1: setBtnText\n  } = useState('Читать полностью');\n\n  const handleReview = () => {\n    if (allText) {\n      setAllText(false);\n      setBtnText('Свернуть отзыв');\n    } else {\n      setAllText(true);\n      setBtnText('Читать полностью');\n    }\n  };\n\n  const split = (string, length = 120) => {\n    if (string.length <= length) {\n      return string;\n    }\n\n    let newString = '';\n\n    while (newString.length < length && string.length > newString.length) {\n      newString += string[newString.length];\n    }\n\n    return `${newString}...`;\n  };\n\n  const firstPartText = split(review);\n  return __jsx(\"div\", {\n    className: \"jsx-1594285159\" + \" \" + 'container'\n  }, __jsx(\"div\", {\n    className: \"jsx-1594285159\" + \" \" + 'columnGap'\n  }, __jsx(\"div\", {\n    className: \"jsx-1594285159\" + \" \" + 'logs'\n  }, __jsx(\"p\", {\n    className: \"jsx-1594285159\"\n  }, logDate), __jsx(\"p\", {\n    className: \"jsx-1594285159\"\n  }, logName)), __jsx(\"div\", {\n    className: \"jsx-1594285159\" + \" \" + 'stars'\n  }, Array.from({\n    length: 5\n  }).map((star, index) => __jsx(\"img\", {\n    src: `/assets/review/${index < stars ? 'filled' : 'empty'}-star.svg`,\n    alt: `${index < stars ? 'filled' : 'empty'} star`,\n    className: \"jsx-1594285159\"\n  })))), __jsx(\"div\", {\n    className: \"jsx-1594285159\" + \" \" + 'reviewContainer'\n  }, __jsx(\"div\", {\n    className: \"jsx-1594285159\" + \" \" + 'module'\n  }, __jsx(\"p\", {\n    className: \"jsx-1594285159\"\n  }, allText ? firstPartText : review), review.length > 120 ? __jsx(\"button\", {\n    onClick: () => handleReview(),\n    type: \"button\",\n    className: \"jsx-1594285159\" + \" \" + `transparentBtn ${allText ? '' : 'hideBtn'}`\n  }, btnText) : null)), __jsx(_JSXStyle, {\n    id: \"1594285159\"\n  }, [\".container.jsx-1594285159{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:100%;margin:20px 0;}\", \".reviewContainer.jsx-1594285159{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".columnGap.jsx-1594285159{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:50px;column-gap:50px;}\", \".logs.jsx-1594285159{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-column-gap:5px;column-gap:5px;font-size:16px;color:grey;font-family:PT Sans,sans-serif;}\", \".transparentBtn.jsx-1594285159{display:block;padding:0;margin:-25px 30px 0 auto;background:transparent;border:none;outline:0;font-size:16px;font-weight:300;font-family:'Roboto',sans-serif;font-style:italic;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:#707070;cursor:pointer;}\", \".hideBtn.jsx-1594285159{margin-top:0;}\", \".stars.jsx-1594285159{width:100px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\", \".module.jsx-1594285159{position:relative;margin-top:10px;padding-right:0;overflow:hidden;}\", \".module.jsx-1594285159 p.jsx-1594285159{margin-right:50px;font-size:18px;font-weight:300;font-family:'Roboto',sans-serif;color:#000000;}\"]));\n};\n\nexport default ReviewCard;","map":null,"metadata":{},"sourceType":"module"}