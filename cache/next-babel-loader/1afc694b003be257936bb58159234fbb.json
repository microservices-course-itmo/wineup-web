{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * @param {Object} inputFrom - Данные поля \"Цена от\"\n * @param {string} inputFrom.id\n * @param {string} inputFrom.name - Имя поля, необходимо как ключ к state\n * @param {number} inputFrom.defaultValue - Значение по-умолчанию для placeholder\n * @param {string} inputFrom.textLabel - Текст label для этого поля\n * @param {Object} inputTo - Данные поля \"Цена до\"\n * @param {string} inputTo.id\n * @param {string} inputTo.name - Имя поля, необходимо как ключ к state\n * @param {number} inputTo.defaultValue - Значение по-умолчанию для placeholder\n * @param {string} inputTo.textLabel - Текст label для этого поля\n * @param {symbol} currency\n * @param {function} onChange - Функция-обработчик изменений для контролируемого поля\n */\nvar InputPrice = function InputPrice(_ref) {\n  var inputFrom = _ref.inputFrom,\n      inputTo = _ref.inputTo,\n      _ref$currency = _ref.currency,\n      currency = _ref$currency === void 0 ? '₽' : _ref$currency,\n      onChange = _ref.onChange;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-4214355218\" + \" \" + 'row-direction item-gap'\n  }, __jsx(\"div\", {\n    className: \"jsx-4214355218\" + \" \" + 'column-direction'\n  }, __jsx(\"label\", {\n    htmlFor: inputFrom.id,\n    className: \"jsx-4214355218\" + \" \" + 'color'\n  }, inputFrom.textLabel), __jsx(\"div\", {\n    className: \"jsx-4214355218\" + \" \" + 'row-direction'\n  }, __jsx(\"input\", {\n    id: inputFrom.id,\n    name: inputFrom.name,\n    type: \"number\",\n    placeholder: inputFrom.defaultValue,\n    onChange: onChange,\n    className: \"jsx-4214355218\" + \" \" + 'input-price color'\n  }), __jsx(\"label\", {\n    htmlFor: inputFrom.id,\n    className: \"jsx-4214355218\" + \" \" + 'symbol color'\n  }, currency))), __jsx(\"div\", {\n    className: \"jsx-4214355218\" + \" \" + 'column-direction'\n  }, __jsx(\"label\", {\n    htmlFor: \"inputTo\",\n    className: \"jsx-4214355218\" + \" \" + 'color'\n  }, inputTo.textLabel), __jsx(\"div\", {\n    className: \"jsx-4214355218\" + \" \" + 'row-direction'\n  }, __jsx(\"input\", {\n    id: inputTo.id,\n    name: inputTo.name,\n    type: \"number\",\n    placeholder: inputTo.defaultValue,\n    onChange: onChange,\n    className: \"jsx-4214355218\" + \" \" + 'input-price color'\n  }), __jsx(\"label\", {\n    htmlFor: inputTo.id,\n    className: \"jsx-4214355218\" + \" \" + 'symbol color'\n  }, currency)))), __jsx(_JSXStyle, {\n    id: \"4214355218\"\n  }, [\".column-direction.jsx-4214355218{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".row-direction.jsx-4214355218{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}\", \".item-gap.jsx-4214355218{-webkit-column-gap:40px;column-gap:40px;}\", \".symbol.jsx-4214355218{position:relative;right:15px;font-weight:bold;font-size:24px;background:none;}\", \".column-direction.jsx-4214355218 .color.jsx-4214355218{color:#9e9e9e;}\", \".column-direction.jsx-4214355218:focus .color.jsx-4214355218,.column-direction.jsx-4214355218:hover .color.jsx-4214355218{color:white;}\", \".input-price.jsx-4214355218{-moz-appearance:textfield;border:none;background:none;outline:none;width:138px;border-bottom:2px #9e9e9e solid;color:white;}\", \".input-price.jsx-4214355218:hover,.input-price.jsx-4214355218:focus{-moz-appearance:number-input;}\", \".input-price.jsx-4214355218::-webkit-inner-spin-button,.input-price.jsx-4214355218::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}\"]));\n};\n\nexport default InputPrice;","map":null,"metadata":{},"sourceType":"module"}