{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { atom, selector } from 'recoil';\nimport { sortAsc, sortDesc } from './utils';\nimport api from '../../api';\nexport var winesState = atom({\n  key: 'wines',\n  \"default\": []\n});\nexport var winesSortState = atom({\n  key: 'winesSort',\n  \"default\": 'recommendations'\n});\nexport var winesPageState = atom({\n  key: 'winesPage',\n  \"default\": {\n    from: 1,\n    to: 12\n  }\n});\nexport var formFiltersState = atom({\n  key: 'formFilters',\n  \"default\": {\n    priceFrom: 0,\n    priceTo: 100000,\n    volume: [],\n    color: [],\n    sugar: [],\n    sort: [],\n    country: [],\n    region: [],\n    sparkling: []\n  }\n});\nexport var winesQuery = selector({\n  key: 'winesQuery',\n  get: function () {\n    var _get2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var _get, winePage, wineFilter, searchParameters, body, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _get = _ref.get;\n              winePage = _get(winesPageState);\n              wineFilter = _get(formFiltersState);\n              searchParameters = Object.keys(wineFilter).reduce(function (acc, el) {\n                if (wineFilter[el] !== 0 && wineFilter[el].length !== 0) {\n                  if (el === 'priceFrom') {\n                    return acc.concat(\"price>\".concat(wineFilter[el], \";\"));\n                  }\n\n                  if (el === 'priceTo') {\n                    return acc.concat(\"\".concat(acc.includes('price') ? '~' : '', \"price<\").concat(wineFilter[el], \";\"));\n                  }\n\n                  var filters = wineFilter[el].reduce(function (a, e) {\n                    return a.concat(\"\".concat(a.includes(el) ? '~' : '').concat(el, \":\").concat(e, \";\"));\n                  }, '');\n                  return acc.concat(filters);\n                }\n\n                return acc;\n              }, '');\n              body = _objectSpread(_objectSpread({}, winePage), {}, {\n                searchParameters: searchParameters\n              });\n              _context.next = 7;\n              return api.getAllWines(body);\n\n            case 7:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function get(_x) {\n      return _get2.apply(this, arguments);\n    }\n\n    return get;\n  }()\n});\nexport var sortedWinesState = selector({\n  key: 'filteredTodoListState',\n  get: function get(_ref2) {\n    var _get3 = _ref2.get;\n\n    var list = _get3(winesState);\n\n    var sort = _get3(winesSortState);\n\n    switch (sort) {\n      case 'priceAsc':\n        return sortAsc(list);\n\n      case 'priceDesc':\n        return sortDesc(list);\n\n      default:\n        return list;\n    }\n  }\n});\nexport var sorts = atom({\n  key: 'sorts',\n  \"default\": []\n});","map":null,"metadata":{},"sourceType":"module"}