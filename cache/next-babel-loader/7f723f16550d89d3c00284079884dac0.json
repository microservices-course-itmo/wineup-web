{"ast":null,"code":"import { atom, selector, selectorFamily, waitForAll } from 'recoil';\nimport { sortAsc, sortDesc } from '../Catalog/utils';\nimport api from '../../api';\nexport const favoritesState = atom({\n  key: 'favorites',\n  default: []\n});\nexport const favoritesSortState = atom({\n  key: 'favoritesSortState',\n  default: 'recommendations'\n});\nexport const addWineQuery = selectorFamily({\n  key: 'addWineQuery',\n  get: (id, token) => async () => {\n    await api.addWineToFavorites(id, token);\n  }\n});\nexport const deleteWineQuery = selectorFamily({\n  key: 'deleteWineQuery',\n  get: (id, token) => async () => {\n    await api.deleteWineFromFavorites(id, token);\n  }\n});\nexport const deleteQuery = selectorFamily({\n  key: 'deleteQuery',\n  get: token => async () => {\n    await api.deleteAllWinesFromFavorites(token);\n  }\n});\nexport const favoritesQuery = selectorFamily({\n  key: 'favoritesQuery',\n  get: token => async () => {\n    const response = await api.getFavoritesWines(token);\n    return response;\n  }\n});\nexport const winesQuery = selectorFamily({\n  key: 'winesQuery',\n  get: userId => async () => {\n    const response = await api.getFavoritesWinesByUserId(userId);\n    return response;\n  }\n});\nexport const contentQuery = selectorFamily({\n  key: 'contentQuery',\n  get: token => async ({\n    get\n  }) => {\n    const favoriteIds = get(favoritesQuery(token));\n    const wines = get(waitForAll(favoriteIds.map(id => winesQuery(id))));\n    return wines;\n  }\n});\nexport const sortedWinesState = selector({\n  key: 'filteredTodoListState',\n  get: ({\n    get\n  }) => {\n    const list = get(favoritesState);\n    const sort = get(favoritesSortState);\n\n    switch (sort) {\n      case 'priceAsc':\n        return sortAsc(list);\n\n      case 'priceDesc':\n        return sortDesc(list);\n\n      default:\n        return list;\n    }\n  }\n});\nexport const sorts = atom({\n  key: 'sorts',\n  default: []\n});","map":null,"metadata":{},"sourceType":"module"}